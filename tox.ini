[tox]
envlist =
  black
  pep8
  mypy-2
  mypy-3
  pylint

[defs]
pyfiles_nodec_2 =
  python/sp
  python/sp_variant/__init__.py
  python/sp_variant/__main__.py
  python/sp_variant/variant.py

pyfiles_nodec_3 =
  {[defs]pyfiles_nodec_2}
  python/sp_variant/repo.py

pyfiles_dec =
  python/unit_tests

pyfiles =
  {[defs]pyfiles_nodec_3}
  {[defs]pyfiles_dec}

[testenv:black]
skip_install = True
deps =
  black >= 21b0, < 22b0
commands =
  black --check {[defs]pyfiles}

# Disabled flake8 diagnostics since we use the "black" tool for formatting:
# - E203 whitespace before ':' 
# - W503 line break before binary operator
#
[testenv:pep8]
skip_install = True
deps =
  flake8
commands =
  flake8 --ignore=E203,W503 {[defs]pyfiles}

[testenv:mypy-2]
skip_install = True
deps =
  cfg_diag
  mypy[python2]
  types-Jinja2
  types-pathlib2
setenv =
  MYPYPATH = {toxinidir}/python/stubs
commands =
  mypy --py2 --strict {[defs]pyfiles_nodec_2}
  mypy --py2 --strict --allow-untyped-decorators {[defs]pyfiles_nodec_2} {[defs]pyfiles_dec}

[testenv:mypy-3]
skip_install = True
deps =
  cfg_diag
  mypy
  types-Jinja2
setenv =
  MYPYPATH = {toxinidir}/python/stubs
commands =
  mypy --strict {[defs]pyfiles_nodec_3}
  mypy --strict --allow-untyped-decorators {[defs]pyfiles_nodec_3} {[defs]pyfiles_dec}

# Some pylint diagnostics disabled due to the need to support Python 2.x.
[testenv:pylint]
skip_install = True
deps =
  cfg_diag
  ddt
  jinja2
  pylint
  pytest
commands =
  pylint --disable=useless-object-inheritance,super-with-arguments,raise-missing-from {[defs]pyfiles}
