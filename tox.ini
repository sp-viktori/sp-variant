[tox]
envlist =
  black
  pep8
  pep8h
  mypy-2
  mypy-3
  pylint
  unit-tests-2
  unit-tests-3
isolated_build = True

[defs]
pyfiles_nodec_2 =
  python/sp_variant
  setup.py

pyfiles_nodec_3 =
  {[defs]pyfiles_nodec_2}
  python/sp_build_repo
  python/test_docker

pyfiles_dec_2 =
  python/unit_tests

pyfiles_dec_3 =
  {[defs]pyfiles_dec_2}
  python/unit_tests_3

pyfiles =
  {[defs]pyfiles_nodec_3}
  {[defs]pyfiles_dec_3}

[testenv:black]
skip_install = True
deps =
  black >= 21b0, < 22b0
commands =
  black --check {[defs]pyfiles}

[testenv:black-reformat]
skip_install = True
deps =
  black >= 21b0, < 22b0
commands =
  black {[defs]pyfiles}

# Disabled flake8 diagnostics since we use the "black" tool for formatting:
# - E203 whitespace before ':' 
# - W503 line break before binary operator
#
[testenv:pep8]
skip_install = True
deps =
  flake8
commands =
  flake8 --ignore=E203,W503 {[defs]pyfiles}

# Disabled flake8 diagnostics since we use the "black" tool for formatting:
# - E203 whitespace before ':' 
# - W503 line break before binary operator
#
[testenv:pep8h]
skip_install = True
deps =
  flake8
  hacking
commands =
  flake8 --ignore=E203,W503 {[defs]pyfiles}

[testenv:mypy-2]
skip_install = True
deps =
  cfg_diag
  mypy[python2]
  types-Jinja2
  types-pathlib2
setenv =
  MYPYPATH = {toxinidir}/python/stubs
commands =
  mypy --py2 --strict {[defs]pyfiles_nodec_2}
  mypy --py2 --strict --allow-untyped-decorators {[defs]pyfiles_nodec_2} {[defs]pyfiles_dec_2}

[testenv:mypy-3]
skip_install = True
deps =
  cfg_diag
  mypy
  types-Jinja2
  utf8_locale
setenv =
  MYPYPATH = {toxinidir}/python/stubs
commands =
  mypy --strict {[defs]pyfiles_nodec_3}
  mypy --strict --allow-untyped-decorators {[defs]pyfiles_nodec_3} {[defs]pyfiles_dec_3}

# Some pylint diagnostics disabled due to the need to support Python 2.x.
[testenv:pylint]
skip_install = True
deps =
  cfg_diag
  ddt
  jinja2
  pylint
  pytest
  utf8_locale
commands =
  pylint --disable=useless-object-inheritance,super-with-arguments,raise-missing-from {[defs]pyfiles}

[testenv:unit-tests-2]
basepython = python2
deps =
  ddt
  pytest
  typing
commands =
  pytest {posargs} python/unit_tests

[testenv:unit-tests-3]
deps =
  cfg_diag
  ddt
  jinja2
  pytest
commands =
  pytest {posargs} python/unit_tests python/unit_tests_3
